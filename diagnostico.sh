#!/bin/bash

# Diagn√≥stico de la Aplicaci√≥n Homepage Config Generator
echo "üîç Diagn√≥stico de la Aplicaci√≥n Homepage Config Generator"
echo "=================================================="

# Verificar si Node.js est√° instalado
echo "üì¶ Verificando Node.js..."
if command -v node &> /dev/null; then
    echo "‚úÖ Node.js versi√≥n: $(node --version)"
else
    echo "‚ùå Node.js no est√° instalado"
    exit 1
fi

# Verificar si npm est√° instalado
echo "üì¶ Verificando npm..."
if command -v npm &> /dev/null; then
    echo "‚úÖ npm versi√≥n: $(npm --version)"
else
    echo "‚ùå npm no est√° instalado"
    exit 1
fi

# Verificar si estamos en el directorio correcto
echo "üìÅ Verificando directorio de trabajo..."
if [ -f "package.json" ]; then
    echo "‚úÖ Archivo package.json encontrado"
else
    echo "‚ùå No se encontr√≥ package.json - aseg√∫rate de estar en el directorio correcto"
    exit 1
fi

# Verificar dependencias
echo "üìö Verificando dependencias..."
if [ -d "node_modules" ]; then
    echo "‚úÖ Directorio node_modules existe"
else
    echo "‚ö†Ô∏è  Directorio node_modules no existe - ejecutando npm install..."
    npm install
fi

# Verificar puertos ocupados
echo "üåê Verificando puertos..."
if lsof -Pi :3001 -sTCP:LISTEN -t >/dev/null; then
    echo "‚ö†Ô∏è  Puerto 3001 est√° ocupado"
    echo "   Proceso en puerto 3001: $(lsof -Pi :3001 -sTCP:LISTEN | tail -n 1)"
else
    echo "‚úÖ Puerto 3001 est√° libre"
fi

if lsof -Pi :3002 -sTCP:LISTEN -t >/dev/null; then
    echo "‚ö†Ô∏è  Puerto 3002 est√° ocupado"
    echo "   Proceso en puerto 3002: $(lsof -Pi :3002 -sTCP:LISTEN | tail -n 1)"
else
    echo "‚úÖ Puerto 3002 est√° libre"
fi

# Verificar archivos cr√≠ticos
echo "üìÑ Verificando archivos cr√≠ticos..."
critical_files=(
    "src/App.js"
    "src/index.js"
    "src/contexts/ThemeContext.js"
    "src/components/DragDropBuilder.js"
    "src/components/ThemeToggle.js"
    "public/index.html"
)

for file in "${critical_files[@]}"; do
    if [ -f "$file" ]; then
        echo "‚úÖ $file"
    else
        echo "‚ùå $file - FALTANTE"
    fi
done

# Verificar si la aplicaci√≥n puede compilar
echo "üî® Verificando compilaci√≥n..."
echo "   Ejecutando verificaci√≥n de sintaxis..."

# Crear un build de prueba para verificar errores
if npm run build > /tmp/build_output.log 2>&1; then
    echo "‚úÖ La aplicaci√≥n compila correctamente"
else
    echo "‚ùå Error en la compilaci√≥n:"
    tail -n 10 /tmp/build_output.log
fi

echo "=================================================="
echo "üéØ Recomendaciones para iniciar la aplicaci√≥n:"
echo ""
echo "1. Si todo est√° ‚úÖ, ejecuta:"
echo "   npm start"
echo ""
echo "2. Si hay problemas con puertos, usa:"
echo "   PORT=3003 npm start"
echo ""
echo "3. Si hay errores de dependencias:"
echo "   rm -rf node_modules package-lock.json"
echo "   npm install"
echo ""
echo "4. Para forzar un puerto espec√≠fico:"
echo "   PORT=3002 npm start"
echo ""
echo "üåê La aplicaci√≥n deber√≠a estar disponible en:"
echo "   http://localhost:3001 (o el puerto que se asigne)"
echo "=================================================="
